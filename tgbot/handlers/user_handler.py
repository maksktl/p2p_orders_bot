from aiogram import Dispatcher
from aiogram.types import Message, ReplyKeyboardRemove

from tgbot.config import Config
from tgbot.handlers.base import BaseHandler
from tgbot.keyboards.reply import ReplyKeyboard
from tgbot.services.dto.user_configuration_full_dto import UserConfigurationFullDto


class UserHandler(BaseHandler):
    def __init__(self, dp: Dispatcher):
        self._general_filters = {"bot_access": True}
        super().__init__(dp)

    @staticmethod
    async def user_start(message: Message, config: Config, config_active):
        await message.answer(
            f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.chat.first_name}!\n–ù–∞—Å—Ç—Ä–æ–π —Å–≤–æ–π –ø–æ–∏—Å–∫ —Å–≤—è–∑–∫–∏ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
            reply_markup=ReplyKeyboard.get_web_app_conf_keyboard(config.tg_bot.webapp_url, config_active)
        )

    @staticmethod
    async def user_not_accessed(message: Message):
        await message.answer(
            f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.chat.first_name}!\n"
            f"–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –æ—Ç–ø—Ä–∞–≤—å –∫–æ–¥ <code>{message.from_user.id}</code> <a href=\"tg://user?id=254727353\">–ú–µ–Ω–µ–¥–∂–µ—Ä—É</a>",
            reply_markup=ReplyKeyboardRemove()
        )

    async def user_lk(self, message: Message, user_configuration: UserConfigurationFullDto):
        config_text = '‚ùå –ü–æ–∏—Å–∫ —Å–≤—è–∑–æ–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
        if user_configuration:
            config_text = f'–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—à–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:\n' \
                          f'–§–∏–∞—Ç: {user_configuration.fiat}\n' \
                          f'–í—ã–±—Ä–∞–Ω–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã: {",".join(user_configuration.asset)}\n' \
                          f'\n' \
                          f'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç: {user_configuration.deposit / 100.0}\n' \
                          f'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–∏–∞–ø–æ–∑–æ–Ω —Å–ø—Ä–µ–¥–∞: {user_configuration.spread_from / 100.0}' \
                          f' - {user_configuration.spread_to / 100.0}\n' \
                          f'\n' \
                          f'<bold>–ü–æ–∫—É–ø–∫–∞</bold>\n' \
                          f'–í—ã–±—Ä–∞–Ω–Ω—ã–µ –±–∏—Ä–∂–∏: {",".join(user_configuration.exchange_buy)}\n' \
                          f'–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã: {",".join(user_configuration.payment_buy)}\n' \
                          f'–ü–æ–∫—É–ø–∞–µ—Ç–µ –∫–∞–∫: {user_configuration.trade_type_buy}\n' \
                          f'\n'\
                          f'<bold>–ü—Ä–æ–¥–∞–∂–∞</bold>\n' \
                          f'–í—ã–±—Ä–∞–Ω–Ω—ã–µ –±–∏—Ä–∂–∏: {",".join(user_configuration.exchange_sell)}\n' \
                          f'–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã: {",".join(user_configuration.payment_sell)}\n' \
                          f'–ü—Ä–æ–¥–∞–µ—Ç–µ –∫–∞–∫: {user_configuration.trade_type_sell}'
        await message.answer(f'–ü—Ä–æ—Ñ–∏–ª—å: üìú\n'
                             f'ID: <code>{message.from_user.id}</code>\n'
                             f'\n'
                             f'–ò–º—è: {message.from_user.first_name}\n'
                             f'\n'+config_text)

    def register_methods(self):
        self.dp.register_message_handler(UserHandler.user_start, commands=["start"], state="*", **self._general_filters)
        self.dp.register_message_handler(UserHandler.user_lk(), commands=["lk"], state="*", **self._general_filters)
        self.dp.register_message_handler(UserHandler.user_not_accessed, bot_access=False)
